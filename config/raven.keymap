#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

/ {
  combos {
    compatible = "zmk,combos";
  };

  macros {
  };

  behaviors {
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
        &kp TAB   &kp Q      &kp W  &kp E     &kp R                                    &kp T             &kp Y  &kp U    &kp I                                     &kp O      &kp P    &kp BSLH
        &none     &none      &none  &none     &none                                    &kp G             &kp H  &none    &none                                     &none      &none
        &kp APOS  &kp LSHFT  &kp Z  &kp X     &kp C                                    &kp V             &kp B  &kp N    &kp M                                     &kp COMMA  &kp DOT
        &kp FSLH  &kp ESC           &kp LGUI  &rgblayer 1 RGB_COLOR_HSB_VAL(80,70,50)         &kp SPACE         &kp RET  &rgblayer 2 RGB_COLOR_HSB_VAL(180,70,50)  &kp RALT
      >;

      sensor-bindings = <&none>, <&none>;
    };

    raise {
      bindings = <
        &trans      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &trans  &trans  &trans  &trans
        &trans      &trans        &trans        &trans        &trans        &trans                &trans  &trans  &trans  &trans  &trans
        &trans      &trans                      &trans        &trans                      &trans          &trans  &trans  &trans
      >;

      sensor-bindings = <&none>;
    };

    lower {
      bindings = <
        &trans     &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &trans
        &trans     &trans     &trans  &trans    &trans    &trans             &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH
        &kp GRAVE  &trans     &trans  &trans    &trans    &trans             &trans     &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC
        &kp PIPE   &kp TILDE          &trans    &trans               &trans             &trans     &trans    &trans
      >;
    };

    both {
      bindings = <
        &rgb_ug RGB_COLOR_HSB(0,80,60)    &rgb_ug RGB_COLOR_HSB(20,80,60)   &rgb_ug RGB_COLOR_HSB(40,80,60)  &rgb_ug RGB_COLOR_HSB(60,80,60)  &rgb_ug RGB_COLOR_HSB(80,80,60)  &rgb_ug RGB_COLOR_HSB(100,80,60)          &rgb_ug RGB_COLOR_HSB(120,80,60)  &rgb_ug RGB_COLOR_HSB(140,80,60)  &rgb_ug RGB_COLOR_HSB(160,80,60)  &rgb_ug RGB_COLOR_HSB(180,80,60)  &rgb_ug RGB_COLOR_HSB(200,80,60)  &rgb_ug RGB_COLOR_HSB(220,80,60)
        &rgb_ug RGB_COLOR_HSB(0,60,40)    &rgb_ug RGB_COLOR_HSB(20,60,40)   &rgb_ug RGB_COLOR_HSB(40,60,40)  &rgb_ug RGB_COLOR_HSB(60,60,40)  &rgb_ug RGB_COLOR_HSB(80,60,40)  &rgb_ug RGB_COLOR_HSB(100,60,40)          &rgb_ug RGB_COLOR_HSB(120,60,40)  &rgb_ug RGB_COLOR_HSB(140,60,40)  &rgb_ug RGB_COLOR_HSB(160,60,40)  &rgb_ug RGB_COLOR_HSB(180,60,40)  &rgb_ug RGB_COLOR_HSB(200,60,40)
        &rgb_ug RGB_COLOR_HSB(220,60,40)  &rgb_ug RGB_COLOR_HSB(0,80,30)    &rgb_ug RGB_COLOR_HSB(20,80,30)  &rgb_ug RGB_COLOR_HSB(40,80,30)  &rgb_ug RGB_COLOR_HSB(60,80,30)  &rgb_ug RGB_COLOR_HSB(80,80,30)           &rgb_ug RGB_COLOR_HSB(100,80,30)  &rgb_ug RGB_COLOR_HSB(120,80,30)  &rgb_ug RGB_COLOR_HSB(140,80,30)  &rgb_ug RGB_COLOR_HSB(160,80,30)  &rgb_ug RGB_COLOR_HSB(180,80,30)
        &rgb_ug RGB_COLOR_HSB(200,80,30)  &rgb_ug RGB_COLOR_HSB(220,80,30)                                   &trans                           &trans                                                             &trans                                    &trans                            &trans                            &trans
      >;
    };

    autoshift {
      bindings = <
        &trans  &as Q   &as W  &as E   &as R   &as T          &as Y  &as U   &as I   &as O   &as P   &trans
        &trans  &as A   &as S  &as D   &as F   &as G          &as H  &as J   &as K   &as L   &trans
        &trans  &trans  &as Z  &as X   &as C   &as V          &as B  &as N   &as M   &trans  &trans
        &trans  &trans         &trans  &trans         &trans         &trans  &trans  &trans
      >;
    };
  };
};
